#import necessary libraries
import csv
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression

#import data from csv into dataframe 'df'
df = pd.read_csv('InnovationTesting-master/Dataset/WholeData.csv')

#ensure data has no infinites, NA's, or execessively large values
df.replace([np.inf, -np.inf], np.nan)
df.dropna()
df.round(8)
df = df[~df.isin([np.nan, np.inf, -np.inf]).any(1)]

#Establish the Features and the Target in X and y variables repsectively
X = df[['GDP','Population']]
y = df.Deaths

#convert x and y from dataframe to numpy array
X = X.to_numpy()
y = y.to_numpy()

#just checking up on the data to make sure it looks right
print(X)
print("X -",X.shape)
print("Y -",y.shape)

#train the model
reg = LinearRegression().fit(X,y)

#print info
print("Score: ",reg.score(X,y))
print("coef: ",reg.coef_)
print("intercept",reg.intercept_)

#make a prediction
features = np.array([[1.74E+12, 36286425]])
prediction = reg.predict(features)
print(prediction)

#compare prediction to actual value
actual = .6400
residual = abs(actual - prediction)
print(residual)